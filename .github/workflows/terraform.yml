name: 'Terraform'

on:
  push:
    branches: ['main']

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Run yarn install
      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          dir: lamdba
          cmd: install

      # Run yarn build
      - name: Run build
        uses: borales/actions-yarn@v4
        with:
          dir: lamdba
          cmd: build

        # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        working-directory: ./terraform
        run: |
          terraform init  
          terraform plan -input=false

        # On push to "main", build or change infrastructure according to Terraform configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -input=false
